service: pcInventoryServer 

plugins: 
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'inventory-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider: 
  name: aws
  runtime: nodejs8.10 
  stage: dev
  region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["InventoryDynamoDbTable", "Arn" ] }
  environment:
    INVENTORY_TABLE: ${self:custom.tableName}

functions: 
  app: 
    handler: index.handler 
    timeout: 10
    memorySize: 128
    events:
      - http: 
          path: /
          method: get 
      - http:
          path: /inventory/all
          method: get
      - http:
          path: /inventory/{proxy}
          method: get
      - http:
          path: /inventory/new
          method: post
      - http:
          path: /inventory/delete/{proxy}
          method: delete
 
resources:
  Resources:
    InventoryDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: componentName
            AttributeType: S
        KeySchema:
          -
            AttributeName: componentName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

